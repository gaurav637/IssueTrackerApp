name: Issue Tracker Application

on:
  push:
    branches: [ "staging" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found. Skipping dependencies installation."
          fi
      - name: Run Tests with pytest
        run: |
          pytest --maxfail=5 --disable-warnings --tb=short

  merge-to-main:
    needs: build
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Merge Staging into Main
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git merge staging --no-ff -m "Auto-merged staging into main"
          git push origin main

      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.sendgrid.net
          server_port: 587
          username: apikey
          password: ${{ secrets.SENDGRID_API_KEY }}
          from: ${{ secrets.YOUR_EMAIL }}
          to: ${{ secrets.RECIPIENT_EMAIL }}
          subject: "Merge Successful: Staging â†’ Main"
          body: "The latest changes from staging have been successfully merged into main."

      - name: Create deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: Issue Tracker
          environment_name: IssueTracker-env
          version_label: ${{ github.sha }}
          region: us-east-1
          deployment_package: deploy.zip
